import sys
input = sys.stdin.readline

n = int(input())

d = [0] * (n+1)

# 다이나믹 프로그래밍 진행(bottom-up)
for i in range(2, n+1): # 여기서 주의해야 할건 리스트의 값은 연산된 횟수를 구하는 거고 i는 나눠야할 수를 모든 가능성을 열어두고 나누거나 빼주는 것
    # 현재의 수에서 1을 빼는 경우
    d[i] = d[i-1] + 1 # + 1 은 연산된 횟수 증가 d[i - 1]에서 -1은 -1 한것 메모제이션으로 리스트에 값 저장
    # 현재의 수가 2로 나누어 떨어지는 경우
    if i%2 == 0:
        d[i] = min(d[i], d[i//2] + 1) # 여기서 d[i]는 1을 빼는 경우 1을 더하는 것은 d는 결과가 아닌 계산한 횟수를 저장하는 것이기 때문
    # 현재의 수가 3으로 나누어 떨어지는 경우
    if i%3 == 0:
        d[i] = min(d[i], d[i//3] + 1)
# 각 i마다 1로 만들기 위한 최소 연산수가 리스트에 저장되어있음
# 결과 출력 (메모이제이션 보텀업) 유기적으로 연결되어있다. 서로 영향을 끼침
# ex. 만약 i가 9인경우 if i %3 을 만나면 d[3]이 되는데 d[3]의 연산횟수에서 //3을 해줬으니 연산횟수 +1을 해주면 된다.
print(d[n])